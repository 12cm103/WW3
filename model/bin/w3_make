#!/bin/sh
# --------------------------------------------------------------------------- #
# w3_make : Compile and link WAVEWATCH III programs using standard make and   #
#           makefile methods.                                                 #
#                                                                             #
# use     : w3_make [program [...]]                                           #
#              program: program name of WAVEWATCH III (sub)program.           #
#                                                                             #
# error codes : Program ends if error occurs in make_makefile.sh.             #
#                                                                             #
# programs used :                                                             #
#       make_makefile.sh :  Makes the makefile.                               #
#                                                                             #
# programs called from the makefile :                                         #
#       ad3   : script to execute preprocessor and to compile.                #
#       link  : linker script.                                                #
#                                                                             #
#                                                      Hendrik L. Tolman      #
#                                                      May 2009               #
#                                                      Aug. 2010              #
#                                                                             #
#    Copyright 2009-2010 National Weather Service (NWS),                      #
#       National Oceanic and Atmospheric Administration.  All rights          #
#       reserved.  WAVEWATCH III is a trademark of the NWS.                   #
#       No unauthorized use without permission.                               #
#                                                                             #
# --------------------------------------------------------------------------- #
# 1. Preparations                                                             #
# --------------------------------------------------------------------------- #
# 1.a Internal variables

  ww3_env="${HOME}/.wwatch3.env"                           # setup file
  if [ ${WWATCH3_ENV} ]; then ww3_env="${WWATCH3_ENV}"; fi # alternate setup file
  all_programs=""
  all_programs="$all_programs ww3_grid"
  all_programs="$all_programs ww3_strt"
  all_programs="$all_programs ww3_prep"
  all_programs="$all_programs ww3_shel"
  all_programs="$all_programs ww3_multi"
  all_programs="$all_programs ww3_sbs1"
  all_programs="$all_programs ww3_outf"
  all_programs="$all_programs ww3_outp"
  all_programs="$all_programs ww3_trck"
  all_programs="$all_programs ww3_grib"
  all_programs="$all_programs ww3_gint"
  all_programs="$all_programs gx_outf"
  all_programs="$all_programs gx_outp"
  all_programs="$all_programs ww3_prnc"
  all_programs="$all_programs ww3_ounf"
  all_programs="$all_programs ww3_ounp"

# 1.b ID header  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  echo ' '
  echo '                    *****************************'
  echo '                  ***  compiling WAVEWATCH III  ***'
  echo '                    *****************************'
  echo ' '

# 1.c Process/save input - - - - - - - - - - - - - - - - - - - - - - - - - - - 

  if test "$#" = '0'
  then
    progs="$all_programs"
  else
    progs="$*"
  fi

# 1.d Get data from setup file - - - - - - - - - - - - - - - - - - - - - - - - 

  if test -f $ww3_env
  then
    set `grep WWATCH3_DIR $ww3_env` ; shift
    main_dir="$*"
    set `grep WWATCH3_TMP $ww3_env` ; shift
    temp_dir="$*"
    set `grep WWATCH3_SOURCE $ww3_env` ; shift
    source="$*"
    set `grep WWATCH3_LIST $ww3_env` ; shift
    list="$*"
  else
    echo "*** Set-up file $ww3_env not found ***"
    exit 1
  fi

  echo "Scratch directory : $temp_dir"
  echo "Save source codes : $source"
  echo "Save listings     : $list"
  echo ' '

# 1.e Setup for NetCDF compile - - - - - - - - - - - - - - - - - - - - - - - - 

# 1.e.1 Define NetCDF compile message
  netcdf_compile_message () {
  cat 2>&1 << 'EOF'

*****************************************************************
***         WAVEWATCH III NetCDF Compile Instructions         ***
*****************************************************************

Compile of WAVEWATCH III NetCDF pre- and post-processing programs
requires the environment variable WWATCH3_NETCDF be set to either
NC3 (compile with NetCDF version 3.x) or NC4 (compile with NetCDF
version 4.x).

If WWATCH3_NETCDF = NC3, then the following environment variables
are required.

    NETCDF_LIBDIR = <path to NetCDF-3 libraries>
    NETCDF_INCDIR = <path to NetCDF-3 include>

If WWATCH3_NETCDF = NC4, then the following environment variables
are required.

    NETCDF_CONFIG = <path to NetCDF-4 nc-config utility>

The nc-config utility (part of the NetCDF-4 install) is used to
determine the appropriate compile and link flags for the
WWATCH3_NETCDF=NC4 compile.

The NetCDF-4 compile requires NetCDF version 4.1.2 or higher.
Use "nc-config --version" to check the version of the installed
NetCDF.

Compiling with the NC4 switch requires WWATCH3_NETCDF=NC4 and the
NetCDF-4 installation compiled with the NetCDF-4 API enabled.
Use "nc-config --has-nc4" to check if the installed NetCDF has
the NetCDF-4 API enabled.

*****************************************************************

EOF
  }

# 1.e.2 Check for NetCDF compile
  nc_compile=0
  for nc_prog in ww3_prnc ww3_ounf ww3_ounp
  do
    if [ -n "`echo $progs | grep $nc_prog`" ]
    then
      nc_compile=1
    fi
  done

# 1.e.3 Check NetCDF compile environment
  if [ $nc_compile -eq 1 ]
  then
    if [ -z "$WWATCH3_NETCDF" ]
    then
      echo "ERROR: WWATCH3_NETCDF not defined"
      netcdf_compile_message
      exit 1
    else
      case $WWATCH3_NETCDF in
        NC3)
          if [ -z "$NETCDF_LIBDIR" ]
          then
            echo "ERROR: NETCDF_LIBDIR not defined"
            netcdf_compile_message
            exit 1
          fi
          if [ -z "$NETCDF_INCDIR" ]
          then
            echo "ERROR: NETCDF_INCDIR not defined"
            netcdf_compile_message
            exit 1
          fi
        ;;
        NC4)
          if [ -z "$NETCDF_CONFIG" ]
          then
            echo "ERROR: NETCDF_CONFIG not defined"
            netcdf_compile_message
            exit 1
          fi
          if [ ! -x "$NETCDF_CONFIG" ]
          then
            echo "ERROR: $NETCDF_CONFIG does not exist or is not executable"
            exit 1
          fi
          netcdf_version=`$NETCDF_CONFIG --version | awk '{print $2}'`
          if [ `echo $netcdf_version | tr -d .` -lt 412 ]
          then
            echo "ERROR: NetCDF version $netcdf_version < 4.1.2"
            netcdf_compile_message
            exit 1
          fi
        ;;
        *)
          echo "ERROR: WWATCH3_NETCDF=$WWATCH3_NETCDF not supported"
          netcdf_compile_message
          exit 1
        ;;
      esac
    fi
  fi

# 1.e.4 Check NetCDF-4 API is required and available
  if [ $nc_compile -eq 1 ]
  then
    if [ ! -f $main_dir/bin/switch ]
    then
      echo "ERROR: switch file not found"
      exit 1
    fi
    if [ -n "`grep NC4 $main_dir/bin/switch`" ]
    then
      case $WWATCH3_NETCDF in
        NC3)
          echo "ERROR: WWATCH3_NETCDF=NC3 incompatible with NC4 switch"
          netcdf_compile_message
          exit 1
        ;;
        NC4)
          if [ "`$NETCDF_CONFIG --has-nc4`" = 'no' ]
          then
            echo "ERROR: NetCDF-4 API not enabled (required by NC4 switch)"
            netcdf_compile_message
            exit 1
          fi
        ;;
      esac
    fi
  fi

# 1.f Prepare scratch directory  - - - - - - - - - - - - - - - - - - - - - - - 

  if test ! -d $temp_dir
  then
    if ! `mkdir -p $temp_dir`
    then
      echo ' ' ; echo "      *** Cannot create $temp_dir ***" ; echo ' '
      exit 1
    fi
  fi

  cd $temp_dir
  rm -f *.f *.f90
  rm -f *.l
  cd $main_dir/ftn

# 1.g Prepare makefile - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  if test ! -f $main_dir/bin/switch
  then
    echo ' ' ; echo "      *** switch file not found ***" ; echo ' '
    exit 1
  fi

  make_make='y'
  if test -f $main_dir/bin/switch.old
  then
    if test -f $main_dir/ftn/makefile && \
       test -z "`diff $main_dir/bin/switch $main_dir/bin/switch.old`"
    then
      make_make='n'
    fi
  fi

  if test "$make_make" = 'y'
  then
    echo 'Making makefile ...'
    if $main_dir/bin/make_makefile.sh
    then
      cp $main_dir/bin/switch $main_dir/bin/switch.old
    else
      exit 1
    fi
  fi
  echo ' '

# 1.h Export paths - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

  aPb="$main_dir/bin"     # path containing shell scripts
  aPo="$main_dir/obj"     # path containing .o files
  aPm="$main_dir/mod"     # path containing .mod files
  aPe="$main_dir/exe"     # path containing executables

  export aPb aPo aPm aPe

# --------------------------------------------------------------------------- #
# 2. Run make for all requests                                                #
# --------------------------------------------------------------------------- #
# 2.a Loop over all requests

  for prog in $progs
  do
    echo "Processing $prog"
    echo "---------------------"

# 2.b Check input  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

    OK='n'
    for check in $all_programs
    do
      if test "$prog" = "$check"
      then
        OK='y'
      fi
    done
    if test "$OK" = 'n'
    then
      echo "   *** Program name not recognized ***"
      echo ' '

# 2.c Run make - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

    else
      path_m=$main_dir/mod
      export path_m
      make -f makefile $aPe/$prog
      echo ' '
    fi
  done

# --------------------------------------------------------------------------- #
# 3. End of program ID.                                                       #
# --------------------------------------------------------------------------- #

  echo ' '
  echo '                       **********************'
  echo '                     *** end of compilation ***'
  echo '                       **********************'
  echo ' '

# End of w3_make ------------------------------------------------------------ #
