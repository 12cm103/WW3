!/ ------------------------------------------------------------------- /
      MODULE W3SBT4MD
!/
!/                  +-----------------------------------+
!/                  | WAVEWATCH III           NOAA/NCEP |
!/                  |           H. L. Tolman            |
!/                  |                        FORTRAN 90 |
!/                  | Last update :         29-May-2009 |
!/                  +-----------------------------------+
!/
!/    20-Dec-2004 : Origination.                        ( version 3.06 )
!/    23-Jun-2006 : Formatted for submitting code for   ( version 3.09 )
!/                  inclusion in WAVEWATCH III.
!/    29-May-2009 : Preparing distribution version.     ( version 3.14 )
!/
!/    Copyright 2009 National Weather Service (NWS),
!/       National Oceanic and Atmospheric Administration.  All rights
!/       reserved.  WAVEWATCH III is a trademark of the NWS. 
!/       No unauthorized use without permission.
!/
!  1. Purpose :
!
!     Dummy slot for bottom friction source term.
!        This module can be used to include user-defined source term(s),
!     or to submit a source term to be included into the WAVEWATCH III
!     distribution. See section 5 for requirements for submissions.
!        Codes may be included in WAVEWATCH III as a standard option
!     with it's own dedicated compile switch, or as a version of this
!     module that can be plugged in by a user.
!
!  2. Variables and types :
!
!      Name      Type  Scope    Description
!     ----------------------------------------------------------------
!     ----------------------------------------------------------------
!
!  3. Subroutines and functions :
!
!      Name      Type  Scope    Description
!     ----------------------------------------------------------------
!      W3SBT4    Subr. Public   SHOWEX bottom friction (movable bed)
!      INSBT4    Subr. Public   Corresponding initialization routine.
!     ----------------------------------------------------------------
!
!  4. Subroutines and functions used :
!
!      Name      Type  Module   Description
!     ----------------------------------------------------------------
!      STRACE    Subr. W3SERVMD Subroutine tracing.
!     ----------------------------------------------------------------
!
!  5. Remarks :
!
!     WAVEWATCH III is designed as a highly plug-compatible code.
!     Source term modules can be included as self-contained modules,
!     with limited changes needed to the interface of routine calls
!     in W3SRCE, and in the point postprocessing programs only.
!     Codes submitted for inclusion in WAVEWATCH III should be
!     self-contained in the way described below, and might be
!     provided with distributions fully integrated in the data
!     structure, or as an optional version of this module to be
!     included by the user.
!
!     Rules for preparing a module to be included in or distributed
!     with WAVEWATCH III :
!
!      - Fully document the code following the outline given in this
!        file, and according to all other WAVEWATCH III routines.
!      - Provide a file with necessary modifications to W3SRCE and
!        all other routines that require modification.
!      - Provide a test case with expected results.
!      - It is strongly recommended that the programming style used
!        in WAVEWATCH III is followed, in particular 
!          a) for readability, write as if in fixed FORTRAN format 
!             regarding column use, even though all files are F90
!             free format.
!          b) I prefer upper case programming for permanent code,
!             as I use lower case in debugging and temporary code.
!
!     This module needs to be self-contained in the following way.
!
!      a) All saved variables connected with this source term need
!         to be declared in the module header. Upon acceptance as
!         permanent code, they will be converted to the WAVEWATCH III
!         dynamic data structure.  
!      b) Provide a separate computation and initialization routine.
!         In the submission, the initialization should be called
!         from the computation routine upon the first call to the
!         routine. Upon acceptance as permanent code, the
!         initialization routine will be moved to a more appropriate
!         location in the code (i.e., being absorbed in ww3_grid or
!         being moved to W3IOGR). 
!
!     See notes in the file below where to add these elements.
!
!  6. Switches :
!
!     !/S  Enable subroutine tracing.
!
!  7. Source code :
!/
!/ ------------------------------------------------------------------- /
!/
!     *****************************************
!     ***    Declare saved variables here   ***
!     ***  public or private as appropriate ***
!     *****************************************
!
      
       PUBLIC

 
!/
      CONTAINS
!/ ------------------------------------------------------------------- /
      SUBROUTINE W3SBT4 (A, CG, WN, DEPTH, D50, TAUBBL, BEDFORM, S, D, IX, IY )
!/
!/                  +-----------------------------------+
!/                  | WAVEWATCH III                SHOM |
!/                  !            J. Lepesqueur          !
!/                  |            F. Ardhuin             |
!/                  |                        FORTRAN 90 |
!/                  | Last update :         23-Jun-2011 |
!/                  +-----------------------------------+
!/
!/    23-Jun-2011 : Origination.                        ( version 4.01 )
!/    04-Jul-2011 : Adding momentum flux TAUBBL         ( version 4.01 )
!/
!  1. Purpose :
!
!     SHOWEX bottom friction with movable bed effects 
!
!  2. Method :
!
!  3. Parameters :
!
!     Parameter list
!     ----------------------------------------------------------------
!     ----------------------------------------------------------------
!
!  4. Subroutines used :
!
!      Name      Type  Module   Description
!     ----------------------------------------------------------------
!      STRACE    Subr. W3SERVMD Subroutine tracing.
!     ----------------------------------------------------------------
!
!  5. Called by :
!
!      Name      Type  Module   Description
!     ----------------------------------------------------------------
!      W3SRCE    Subr. W3SRCEMD Source term integration.
!      W3EXPO    Subr.   N/A    Point output post-processor.
!      GXEXPO    Subr.   N/A    GrADS point output post-processor.
!     ----------------------------------------------------------------
!
!  6. Error messages :
!
!       None.
!
!  7. Remarks :
!
!  8. Structure :
!
!     See source code.
!
!  9. Switches :
!
!     !/S  Enable subroutine tracing.
!
! 10. Source code :
!
!/ ------------------------------------------------------------------- /
      
      USE CONSTANTS
      USE W3ODATMD, ONLY: NDSE
      USE W3SERVMD, ONLY: EXTCDE
      USE W3GDATMD, ONLY: NK, NTH, NSPEC, SIG, DDEN, DDEN2,  &
                          SBTCX, ECOS, ESIN 
!/S      USE W3SERVMD, ONLY: STRACE
!/
      IMPLICIT NONE
      REAL, INTENT(IN)        :: CG(NK), WN(NK), DEPTH, A(NSPEC), D50
      INTEGER, INTENT(IN)     :: IX, IY     
      REAL, INTENT(OUT)       :: S(NSPEC), D(NSPEC), TAUBBL(2)
      REAL, INTENT(INOUT)     :: BEDFORM(2)
      REAL                    :: CBETA(NK)
      REAL :: UORB,AORB, EBX, EBY, AX, AY
      REAL :: CONST2, TEMP2
      REAL :: FW, KSUBN, KSUBS, KSUBR, SED_DSTAR
      REAL :: SHIELDS, PSI, PSIC, DELI1, DELI2, EB, XI, VARU, DD50
      INTEGER :: IK, ITH, IS, IND
      
!/
!/ ------------------------------------------------------------------- /
!/ Parameter list
!/
!/
!/ ------------------------------------------------------------------- /
!/ Local parameters
!/
!/S      INTEGER, SAVE           :: IENT = 0
      LOGICAL, SAVE           :: FIRST = .TRUE.
!/
!/ ------------------------------------------------------------------- /
!/
!/S      CALL STRACE (IENT, 'W3SBT4')
!
! 0.  Initializations ------------------------------------------------ *
!
!     **********************************************************
!     ***    The initialization routine should include all   ***
!     *** initialization, including reading data from files. ***
!     **********************************************************
!
!      IF ( FIRST ) THEN
!          CALL INSBT4
!          FIRST  = .FALSE.
!       END IF
!
! 1.  .... ----------------------------------------------------------- *
!
      D = 0.
      S = 0.
      TAUBBL(:)=0.
!
      IF (D50.EQ.10) THEN 
        DD50=0.5D0 
      ELSE
        DD50=D50
        END IF
      IF (D50.LT.1E-5) THEN 
        DD50=1E-5
      ELSE
        DD50=D50
        END IF
!   
      UORB=0.
      AORB=0.
      AX  =0.
      AY  =0.


      DO IK=1, NK
      IF ( WN(IK)*DEPTH .LT. 6. ) THEN  
        EB  = 0.
        EBX = 0.
        EBY = 0.
        DO ITH=1, NTH
           IS=ITH+(IK-1)*NTH
           EB  = EB  + A(IS)
           EBX = EBX +A(IS)*ECOS(ITH)
           EBY = EBY +A(IS)*ESIN(ITH)
           END DO   
!
! U_bot=sigma * Zeta / sinh(KD)  and CBETA = 0.5*sigma^2 /(g*sinh^(kD))
! therefore variance(u_bot)= variance(elevation)*2*CBETA/D
!
         CBETA(IK) = MAX(0., (CG(IK)*WN(IK)/SIG(IK)-0.5) )/DEPTH
         VARU=(EB* DDEN(IK) / CG(IK))*2*CBETA(IK)*GRAV
         UORB = UORB + VARU
         AORB = AORB + VARU/(SIG(IK)**2)
         AX   = AX   + (EBX * DDEN(IK) / CG(IK))*2*CBETA(IK)*GRAV/(SIG(IK)**2)
         AY   = AY   + (EBY * DDEN(IK) / CG(IK))*2*CBETA(IK)*GRAV/(SIG(IK)**2)
         END IF
       END DO
!
! Computes RMS orbital amplitudes ( OR SHOULD BE SIGNIFICANT ???)
!     
       UORB = SQRT(2*UORB)
       AORB = SQRT(2*AORB)
       
       
       UORB = MAX(1.0D-7,UORB)
       AORB = MAX(1.0D-7,AORB)       
           
!
!  First use of FWTABLE to get skin roughness 
!
        ! WRITE(6,*) 'DELAB:',DEPTH,AORB,UORB,AX,AY,DD50,D50
        XI=(ALOG10(MAX(AORB/DD50,ABMIN+1E-4))-ABMIN)/DELAB   ! verifier impact du MAX ... 
        IND  = MAX(MIN (SIZEFWTABLE-1, INT(XI)),1)
        DELI1= MIN (1. ,XI-FLOAT(IND))
        DELI2= 1. - DELI1
        FW =FWTABLE(IND)*DELI2+FWTABLE(IND+1)*DELI1

        PSI=FW*UORB**2/(2.*GRAV*(SED_SG-1)*DD50)
        
!
! critical Shields parameter: to be tabulated later
!
        SED_DSTAR=(GRAV*(SED_SG-1)/nu_water**2)**(0.333333)*DD50
        PSIC=0.3/(1+1.2*SED_DSTAR)+0.55*(1-exp(-0.02*SED_DSTAR))
         shields=psi/psic
        shields=psi/psic
!
       IF(SHIELDS.GT.SBTCX(3)) THEN 
         KSUBR=AORB*SBTCX(1)*SHIELDS**SBTCX(2)
!
! sheet flow
!
         KSUBS=AORB*0.0655*(UORB**2/((SED_SG-1)*GRAV*AORB))**1.4
         KSUBN=KSUBS+KSUBR
         BEDFORM(1)=KSUBN
         BEDFORM(2)=ATAN2(AY,AX)*RADE
       ELSE 
         KSUBN=MAX(0.01,AORB*SBTCX(3))
         KSUBN=MIN(2*AORB,KSUBN) 
         END IF   

!
!  second use of FWTABLE to get total (skin+form) roughness 
!
        XI=(ALOG10(MAX(AORB/KSUBN,ABMIN+1E-4))-ABMIN)/DELAB   ! verifier impact du MAX ... 
        IND  = MIN (SIZEFWTABLE-1, INT(XI))
        DELI1= MIN (1. ,XI-FLOAT(IND))
        DELI2= 1. - DELI1
        FW =FWTABLE(IND)*DELI2+FWTABLE(IND+1)*DELI1

      DO  IK=1, NK
       CONST2=DDEN2(IS)/CG(IK) &        !Jacobian to get energy in band
              *GRAV/(SIG(IK)/WN(IK))     ! coefficient to get momentum
        IF ( WN(IK)*DEPTH .LT. 6.0)  THEN 
        DO ITH=1,NTH       
          IS=ITH+(IK-1)*NTH
          D(IS)=-FW*UORB*A(IS)*CBETA(IK)

          TEMP2=CONST2*D(IS)*A(IS)
          TAUBBL(1) = TAUBBL(1) - TEMP2*ECOS(IS)
          TAUBBL(2) = TAUBBL(2) - TEMP2*ESIN(IS)

          S(IS)=D(IS)*A(IS)
          END DO
        END IF
        END DO 

      RETURN
!/
!/ End of W3SBT4 ----------------------------------------------------- /
!/
      END SUBROUTINE W3SBT4

!/ ------------------------------------------------------------------- /


      END MODULE W3SBT4MD
